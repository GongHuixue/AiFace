package android.com.aiface.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import android.com.aiface.database.bean.AttendanceFace;
import android.com.aiface.database.bean.GateFace;
import android.com.aiface.database.bean.HomeFace;
import android.com.aiface.database.bean.MeetingFace;

import android.com.aiface.greendao.AttendanceFaceDao;
import android.com.aiface.greendao.GateFaceDao;
import android.com.aiface.greendao.HomeFaceDao;
import android.com.aiface.greendao.MeetingFaceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig attendanceFaceDaoConfig;
    private final DaoConfig gateFaceDaoConfig;
    private final DaoConfig homeFaceDaoConfig;
    private final DaoConfig meetingFaceDaoConfig;

    private final AttendanceFaceDao attendanceFaceDao;
    private final GateFaceDao gateFaceDao;
    private final HomeFaceDao homeFaceDao;
    private final MeetingFaceDao meetingFaceDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        attendanceFaceDaoConfig = daoConfigMap.get(AttendanceFaceDao.class).clone();
        attendanceFaceDaoConfig.initIdentityScope(type);

        gateFaceDaoConfig = daoConfigMap.get(GateFaceDao.class).clone();
        gateFaceDaoConfig.initIdentityScope(type);

        homeFaceDaoConfig = daoConfigMap.get(HomeFaceDao.class).clone();
        homeFaceDaoConfig.initIdentityScope(type);

        meetingFaceDaoConfig = daoConfigMap.get(MeetingFaceDao.class).clone();
        meetingFaceDaoConfig.initIdentityScope(type);

        attendanceFaceDao = new AttendanceFaceDao(attendanceFaceDaoConfig, this);
        gateFaceDao = new GateFaceDao(gateFaceDaoConfig, this);
        homeFaceDao = new HomeFaceDao(homeFaceDaoConfig, this);
        meetingFaceDao = new MeetingFaceDao(meetingFaceDaoConfig, this);

        registerDao(AttendanceFace.class, attendanceFaceDao);
        registerDao(GateFace.class, gateFaceDao);
        registerDao(HomeFace.class, homeFaceDao);
        registerDao(MeetingFace.class, meetingFaceDao);
    }
    
    public void clear() {
        attendanceFaceDaoConfig.clearIdentityScope();
        gateFaceDaoConfig.clearIdentityScope();
        homeFaceDaoConfig.clearIdentityScope();
        meetingFaceDaoConfig.clearIdentityScope();
    }

    public AttendanceFaceDao getAttendanceFaceDao() {
        return attendanceFaceDao;
    }

    public GateFaceDao getGateFaceDao() {
        return gateFaceDao;
    }

    public HomeFaceDao getHomeFaceDao() {
        return homeFaceDao;
    }

    public MeetingFaceDao getMeetingFaceDao() {
        return meetingFaceDao;
    }

}
